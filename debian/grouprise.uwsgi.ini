[uwsgi]
# used plugins
plugins = python3
plugins = router_redirect

# reload this config whenever these file change
touch-reload = /etc/grouprise/maintenance_mode
touch-reload = /etc/grouprise/settings.py

# project run configuration
pythonpath = /usr/share/grouprise/grouprise
pythonpath = /usr/share/grouprise/dependencies
module = grouprise.wsgi:application
uid = grouprise
gid = nogroup
umask = 022

# basic process configuration
master = True
vacuum = True

# performance & scaling
# You can modify the number of workers and threads by setting the
# GROUPRISE_UWSGI_WORKERS and GROUPRISE_UWSGI_THREADS environment
# variables in /etc/default/uwsgi.
# TODO: https://github.com/unbit/uwsgi/pull/1904 added support for environment
#       variable defaults, but did not land in any release yet
if-env = GROUPRISE_UWSGI_WORKERS
workers = $(GROUPRISE_UWSGI_WORKERS)
endif =
if-not-env = GROUPRISE_UWSGI_WORKERS
workers = 2
endif =
if-env = GROUPRISE_UWSGI_THREADS
threads = $(GROUPRISE_UWSGI_THREADS)
endif =
if-not-env = GROUPRISE_UWSGI_THREADS
threads = 2
endif =

# socket configuration
chown-socket = www-data:www-data
chmod-socket = 640

# logging
logto = /var/log/uwsgi/%n.log

# profiling
# env = PROFILING_DIRECTORY=/tmp/profiling-grouprise/

# maintenance mode
if-exists = /etc/grouprise/maintenance_mode
route = .* break:503
endif =

# sentry configuration
if-exists = /etc/grouprise/enable_sentry
# Sentry catches a lot of OSError exceptions caused by clients
# prematurely closing the connection. This is not something
# we want to know about.
ignore-sigpipe = true
ignore-write-errors = true
disable-write-exception = True
env = SENTRY_ENABLE=true
endif =
