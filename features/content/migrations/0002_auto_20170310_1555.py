# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-10 14:55
from __future__ import unicode_literals

from django.db import migrations


def copy_articles(apps, schema_editor):
    Article = apps.get_model('content.Article')
    Association = apps.get_model('associations.Association')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    Content = apps.get_model('content2.Content')
    Contribution = apps.get_model('contributions.Contribution')
    GestaltContent = apps.get_model('entities.GestaltContent')
    GroupContent = apps.get_model('entities.GroupContent')
    Text = apps.get_model('contributions.Text')
    Version = apps.get_model('content2.Version')

    for a in Article.objects.all():
        content = Content.objects.create(title=a.title)
        v = Version.objects.create(content=content, author=a.author, text=a.text)
        v.time_created = a.date_created
        v.save()
        
        for g in a.additional_authors.all():
            Version.objects.create(content=content, author=g, text=a.text)

        for c in a.comments.all():
            t = Text.objects.create(text=c.text)
            contrib = Contribution.objects.create(
                    container_type=ContentType.objects.get_for_model(content),
                    container_id=content.id,
                    author=c.author, contribution_id=t.id,
                    contribution_type=ContentType.objects.get_for_model(t))
            contrib.time_created = c.date_created
            contrib.save()
        
        for gc in GestaltContent.objects.filter(content__article=a):
            Association.objects.create(
                    container_type=ContentType.objects.get_for_model(content),
                    container_id=content.id,
                    entity_type=ContentType.objects.get_for_model(gc.gestalt),
                    entity_id=gc.gestalt.id,
                    public=a.public,
                    slug=a.slug)
        
        for gc in GroupContent.objects.filter(content__article=a):
            Association.objects.create(
                    container_type=ContentType.objects.get_for_model(content),
                    container_id=content.id,
                    entity_type=ContentType.objects.get_for_model(gc.group),
                    entity_id=gc.group.id,
                    public=a.public,
                    slug=a.slug)


class Migration(migrations.Migration):

    dependencies = [
        ('associations', '0002_auto_20170224_0910'),
        ('content', '0034_auto_20170209_1451'),
        ('content2', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('contributions', '0002_auto_20170309_1515'),
        ('entities', '0052_auto_20170112_1041'),
    ]

    operations = [
        migrations.RunPython(copy_articles),
    ]
